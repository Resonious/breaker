// Generated by LiveScript 1.3.0
(function(){
  var Block;
  this.Block = Block = (function(superclass){
    var prototype = extend$((import$(Block, superclass).displayName = 'Block', Block), superclass).prototype, constructor = Block;
    function Block(game, core, key, x, y){
      var x$;
      Block.superclass.call(this, game, x, y, key);
      this.core = core;
      game.physics.arcade.enable(this);
      this.anchor.setTo(0.5, 0.5);
      x$ = this.body;
      x$.bounce.y = 0.1;
      x$.bounce.x = 0.3;
      x$.gravity.y = 2000;
      x$.collideWorldBounds = false;
    }
    prototype.update = function(){};
    return Block;
  }(Phaser.Sprite));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
